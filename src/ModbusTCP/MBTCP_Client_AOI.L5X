<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--Modbus TCP Client-->
<RSLogix5000Content SchemaRevision="1.0" SoftwareRevision="37.00" TargetName="MBTCP_Client" TargetType="AddOnInstructionDefinition" TargetRevision="3.0 " TargetLastEdited="2025-06-05T03:27:39.909Z" ContainsContext="true" Owner="jmedders45@live.com" ExportDate="Wed Jun 04 22:27:46 2025" ExportOptions="References NoRawData L5KData DecoratedData Context Dependencies ForceProtectedEncoding AllProjDocTrans">
<Controller Use="Context" Name="DEVPAC">
<DataTypes Use="Context">
<DataType Name="LxIOModule" Family="NoFamily" Class="User">
<Members>
<Member Name="Status" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Attribute 4: Current state of this instance.]]>
</Description>
</Member>
<Member Name="StatusBits" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bits indicate the status of this instance (overlay).]]>
</Description>
</Member>
<Member Name="Standby" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.0: Controller is powering up.]]>
</Description>
</Member>
<Member Name="Faulted" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="1" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.1: Indicates whether any of this module's connections have failed.]]>
</Description>
</Member>
<Member Name="Validating" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="2" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.2: Connection integrity is being verified.]]>
</Description>
</Member>
<Member Name="Connecting" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="3" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.3: Connections are being established with the module.]]>
</Description>
</Member>
<Member Name="Online" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="4" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.4: All connections to the module are established and active.]]>
</Description>
</Member>
<Member Name="ShuttingDown" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="5" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.5: All connections are shutting down.]]>
</Description>
</Member>
<Member Name="Inhibited" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="6" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.6: The module is inhibited.]]>
</Description>
</Member>
<Member Name="Waiting" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="7" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.7: This module's parent is not running.]]>
</Description>
</Member>
<Member Name="Reconfiguring" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="8" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.8: The module is reconfiguring its connections.]]>
</Description>
</Member>
<Member Name="FirmwareUpdating" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="9" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.9: Firmware supervisor is attempting to flash the module.]]>
</Description>
</Member>
<Member Name="Configuring" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="10" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.10: Controller is configuring the module.]]>
</Description>
</Member>
<Member Name="Offline" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="11" ExternalAccess="Read/Write">
<Description>
<![CDATA[StatusBits.11: The module is neither connected nor inhibited.]]>
</Description>
</Member>
<Member Name="FaultCode" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Attribute 5: Module fault code.]]>
</Description>
</Member>
<Member Name="FaultInfo" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Attribute 6: Module fault detail.]]>
</Description>
</Member>
<Member Name="Mode" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Attribute 7: Present mode of this module.]]>
</Description>
</Member>
<Member Name="Instance" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Attribute 14: IO map instance.]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="LxSocketCreateParameters" Family="NoFamily" Class="User">
<Members>
<Member Name="Type" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Type. 1: TCP, 2: UDP.]]>
</Description>
</Member>
<Member Name="Family" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Address family (must be 2).]]>
</Description>
</Member>
<Member Name="Port" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Local port number.]]>
</Description>
</Member>
<Member Name="Address" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Local IP address.]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="MBTCP_ClientConnection" Family="NoFamily" Class="User">
<Members>
<Member Name="LocalAddress" DataType="STR_16" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[For controllers with more than one local IP address.]]>
</Description>
</Member>
<Member Name="DestAddress" DataType="STR_16" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[IP address of the Modbus TCP server.]]>
</Description>
</Member>
<Member Name="DestPort" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Modbus port number open on the server. Default: 502.]]>
</Description>
</Member>
<Member Name="MsgSrc" DataType="SINT" Dimension="500" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Contains message source.]]>
</Description>
</Member>
<Member Name="MsgDest" DataType="SINT" Dimension="500" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Contains message destination.]]>
</Description>
</Member>
</Members>
<Dependencies>
<Dependency Type="DataType" Name="STR_16"/>
<Dependency Type="DataType" Name="STR_16"/>
</Dependencies>
</DataType>
<DataType Name="MBTCP_ClientData" Family="NoFamily" Class="User">
<Members>
<Member Name="Coils" DataType="BOOL" Dimension="1024" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[0xxx]]>
</Description>
</Member>
<Member Name="DiscreteInputs" DataType="BOOL" Dimension="1024" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[1xxx]]>
</Description>
</Member>
<Member Name="InputRegisters" DataType="INT" Dimension="1024" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[3xxx]]>
</Description>
</Member>
<Member Name="HoldingRegisters" DataType="INT" Dimension="1024" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[4xxx]]>
</Description>
</Member>
</Members>
</DataType>
<DataType Name="MBTCP_ClientTransaction" Family="NoFamily" Class="User">
<Members>
<Member Name="ZZZZZZZZZZMBTCP_Clie0" DataType="SINT" Dimension="0" Radix="Decimal" Hidden="true" ExternalAccess="Read/Write"/>
<Member Name="Enable" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZMBTCP_Clie0" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[Enables (1) or disables (0) the transaction.]]>
</Description>
</Member>
<Member Name="Interval" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Time between triggers (milliseconds).]]>
</Description>
</Member>
<Member Name="Type" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Modbus transaction code. 1: Coil read, 2: Discrete input read, 3: Holding register read, 4: Input register read, 5: Write single coil, 6: Single holding register write, 15: Multiple coil write, 16: Multiple holding register write.]]>
</Description>
</Member>
<Member Name="StationID" DataType="SINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Unit Identifier to use if using a gateway. Otherwise leave as 0.]]>
</Description>
</Member>
<Member Name="BeginAddress" DataType="UINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Beginning address in remote device to read from or write to.]]>
</Description>
</Member>
<Member Name="Count" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Number of items in remote device to read from or write to.]]>
</Description>
</Member>
<Member Name="LocalAddress" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Beginning address in the local data arrays.]]>
</Description>
</Member>
<Member Name="ZZZZZZZZZZMBTCP_Clie8" DataType="SINT" Dimension="0" Radix="Decimal" Hidden="true" ExternalAccess="Read/Write"/>
<Member Name="Complete" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="ZZZZZZZZZZMBTCP_Clie8" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[Transaction completed.]]>
</Description>
</Member>
<Member Name="Status" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Transaction status. 0: Success, 1: In process, 2: Retry, 1: Exception.]]>
</Description>
</Member>
<Member Name="Diag" DataType="MBTCP_ClientTransactionDiag" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
<Dependencies>
<Dependency Type="DataType" Name="MBTCP_ClientTransactionDiag"/>
</Dependencies>
</DataType>
<DataType Name="MBTCP_ClientTransactionDiag" Family="NoFamily" Class="User">
<Members>
<Member Name="Request" DataType="STR_462" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Buffer used to build the request string.]]>
</Description>
</Member>
<Member Name="StatusBits" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bits describe the transaction condition (overlay).]]>
</Description>
</Member>
<Member Name="RequestBuilt" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[Request string has been built.]]>
</Description>
</Member>
<Member Name="Overlap" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="1" ExternalAccess="Read/Write">
<Description>
<![CDATA[Transaction did not complete before next trigger.]]>
</Description>
</Member>
<Member Name="Overload" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="StatusBits" BitNumber="2" ExternalAccess="Read/Write">
<Description>
<![CDATA[Transaction is not completing because of overlaps in one or more transactions.]]>
</Description>
</Member>
<Member Name="CommandBits" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Bits describe the transaction command (overlay).]]>
</Description>
</Member>
<Member Name="Trigger" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="CommandBits" BitNumber="0" ExternalAccess="Read/Write">
<Description>
<![CDATA[CommandBits.]]>
</Description>
</Member>
<Member Name="WriteNow" DataType="BIT" Dimension="0" Radix="Decimal" Hidden="false" Target="CommandBits" BitNumber="1" ExternalAccess="Read/Write">
<Description>
<![CDATA[CommandBits.]]>
</Description>
</Member>
<Member Name="ID" DataType="INT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Transaction ID used to match reply.]]>
</Description>
</Member>
<Member Name="ErrorCode" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Last transaction error. 0: Success, 2: Network write, 3: Local write, 4: Network read, 5: Local read, 6: Connection failure,12: Invalid transaction code, 13: Data array out of range.]]>
</Description>
</Member>
<Member Name="IntervalTimer" DataType="FBD_TIMER" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Used to trigger transaction.]]>
</Description>
</Member>
<Member Name="NoReplyCount" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="PendingTimer" DataType="FBD_TIMER" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write">
<Description>
<![CDATA[Used for pending requests.]]>
</Description>
</Member>
</Members>
<Dependencies>
<Dependency Type="DataType" Name="STR_462"/>
</Dependencies>
</DataType>
<DataType Name="MBTCP_ConnectParameters" Family="NoFamily" Class="User">
<Members>
<Member Name="Timeout" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DestAddress" DataType="STR_32" Dimension="0" Radix="NullType" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
<Dependencies>
<Dependency Type="DataType" Name="STR_32"/>
</Dependencies>
</DataType>
<DataType Name="STR_16" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="16" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STR_32" Family="StringFamily" Class="User">
<CustomProperties>
<Provider ID="ACM" Ext="0">
<Header xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Maj="2" Min="0" OExt="-1" UExt="1"><Libs><LibHdr CatalogNumber="Test" Guid="94CCB48E-362B-40B2-B5C8-66C930C9596D" /></Libs></Header>
</Provider>
<Provider ID="ACM" Ext="1">
<Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Maj="3" Min="0" OExt="-1"><Val><![CDATA[<DecoratedData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" MajorRev="1" MinorRev="0" CRC="ToDo">
  <Private xsi:type="UdtPrivateData" Guid="94CCB48E-362B-40B2-B5C8-66C930C9596D" ContentType="Task">
    <Attrib />
    <Subs />
  </Private>
</DecoratedData>]]></Val></Data>
</Provider>
</CustomProperties>
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="32" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STR_4096" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="4096" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STR_462" Family="StringFamily" Class="User">
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="462" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
<DataType Name="STR_8" Family="StringFamily" Class="User">
<CustomProperties>
<Provider ID="ACM" Ext="0">
<Header xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Maj="2" Min="0" OExt="-1" UExt="1"><Libs><LibHdr CatalogNumber="Test" Guid="94CCB48E-362B-40B2-B5C8-66C930C9596D" /></Libs></Header>
</Provider>
<Provider ID="ACM" Ext="1">
<Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Maj="3" Min="0" OExt="-1"><Val><![CDATA[<DecoratedData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" MajorRev="1" MinorRev="0" CRC="ToDo">
  <Private xsi:type="UdtPrivateData" Guid="94CCB48E-362B-40B2-B5C8-66C930C9596D" ContentType="Task">
    <Attrib />
    <Subs />
  </Private>
</DecoratedData>]]></Val></Data>
</Provider>
</CustomProperties>
<Members>
<Member Name="LEN" DataType="DINT" Dimension="0" Radix="Decimal" Hidden="false" ExternalAccess="Read/Write"/>
<Member Name="DATA" DataType="SINT" Dimension="8" Radix="ASCII" Hidden="false" ExternalAccess="Read/Write"/>
</Members>
</DataType>
</DataTypes>
<AddOnInstructionDefinitions Use="Context">
<AddOnInstructionDefinition Name="LpPulse" Revision="1.0" Vendor="Jeremy Medders" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2020-06-26T18:22:41.463Z" CreatedBy="APEX\Jeremy" EditedDate="2025-01-22T20:47:43.421Z" EditedBy="APEX\Jeremy" SoftwareRevision="v37.00"
>
<Description>
<![CDATA[Pulse Generator]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Inp_Enable" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Inp_Interval" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Pulse interval (milliseconds).]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[1000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="1000"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Enabled" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Out" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Pulsed output.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="OSR" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TStart" DataType="LINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="LINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TNow" DataType="LINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="LINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
<Line Number="1">
<![CDATA[/*]]>
</Line>
<Line Number="2">
<![CDATA[	LpPulse]]>
</Line>
<Line Number="3">
<![CDATA[*/]]>
</Line>
<Line Number="4">
<![CDATA[]]>
</Line>
<Line Number="5">
<![CDATA[GSV(WallClockTime, , CurrentValue, TNow);]]>
</Line>
<Line Number="6">
<![CDATA[]]>
</Line>
<Line Number="7">
<![CDATA[if (Inp_Enable & NOT OSR OR Out) then]]>
</Line>
<Line Number="8">
<![CDATA[	TStart := TNow;]]>
</Line>
<Line Number="9">
<![CDATA[end_if;]]>
</Line>
<Line Number="10">
<![CDATA[OSR := Inp_Enable;]]>
</Line>
<Line Number="11">
<![CDATA[]]>
</Line>
<Line Number="12">
<![CDATA[Sts_Enabled := Inp_Enable;]]>
</Line>
<Line Number="13">
<![CDATA[Out := Inp_Enable & (TNow - TStart >= Inp_Interval * 1000);]]>
</Line>
<Line Number="14">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
<Routine Name="Prescan" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
<Line Number="1">
<![CDATA[/*]]>
</Line>
<Line Number="2">
<![CDATA[	LpPulse]]>
</Line>
<Line Number="3">
<![CDATA[*/]]>
</Line>
<Line Number="4">
<![CDATA[]]>
</Line>
<Line Number="5">
<![CDATA[OSR := 0;]]>
</Line>
<Line Number="6">
<![CDATA[Out := 0;]]>
</Line>
<Line Number="7">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Name="LxIOPath" Revision="1.0" ExecutePrescan="false" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2024-10-01T20:55:32.953Z" CreatedBy="APEX\Jeremy" EditedDate="2025-01-22T23:39:30.990Z" EditedBy="APEX\Jeremy" SoftwareRevision="v37.00">
<Description>
<![CDATA[IO Path]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="IO" TagType="Base" DataType="MODULE" Usage="InOut" Required="true" Visible="true"/>
<Parameter Name="Path" TagType="Base" DataType="STRING" Usage="InOut" Required="true" Visible="true" Constant="false"/>
</Parameters>
<LocalTags>
<LocalTag Name="Inst" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="INT" DataType="INT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
<Line Number="1">
<![CDATA[/*]]>
</Line>
<Line Number="2">
<![CDATA[	LxIOPath]]>
</Line>
<Line Number="3">
<![CDATA[*/]]>
</Line>
<Line Number="4">
<![CDATA[]]>
</Line>
<Line Number="5">
<![CDATA[GSV(Module, IO, INSTANCE, Inst);]]>
</Line>
<Line Number="6">
<![CDATA[]]>
</Line>
<Line Number="7">
<![CDATA[if (Inst <> 1) then]]>
</Line>
<Line Number="8">
<![CDATA[	GSV(Module, IO, Path, Path.DATA[0]);]]>
</Line>
<Line Number="9">
<![CDATA[	COP(Path.DATA[0], INT, 1);]]>
</Line>
<Line Number="10">
<![CDATA[	Path.LEN := INT;]]>
</Line>
<Line Number="11">
<![CDATA[	COP(Path.DATA[2], Path.DATA[0], 82);]]>
</Line>
<Line Number="12">
<![CDATA[else // path is 'Local']]>
</Line>
<Line Number="13">
<![CDATA[	Path.LEN := 4;]]>
</Line>
<Line Number="14">
<![CDATA[	Path.DATA[0] := 16#1F;]]>
</Line>
<Line Number="15">
<![CDATA[	Path.DATA[1] := 0;]]>
</Line>
<Line Number="16">
<![CDATA[	Path.DATA[2] := 0;]]>
</Line>
<Line Number="17">
<![CDATA[	Path.DATA[3] := 0;]]>
</Line>
<Line Number="18">
<![CDATA[end_if;]]>
</Line>
<Line Number="19">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
</AddOnInstructionDefinition>
<EncodedData EncodedType="AddOnInstructionDefinition" Name="LxMsg" Revision="2.0" Vendor="Jeremy Medders" EditedDate="2024-10-09T13:08:33.983Z" SoftwareRevision="v37.00" EncryptionConfig="9">
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="Message" TagType="Base" DataType="MESSAGE" Usage="InOut" Required="true" Visible="true"/>
<Parameter Name="Class" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Instance" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Attribute" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="RequestLength" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Request length (bytes).]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="UnconnectedTimeout" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="true" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[Unconnected timeout (uSec).]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[30000000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="30000000"/>
</DefaultData>
</Parameter>
<Parameter Name="IO" TagType="Base" DataType="MODULE" Usage="InOut" Required="true" Visible="true">
<Description>
<![CDATA[IO module (optional).]]>
</Description>
</Parameter>
</Parameters>
<Dependencies>
<Dependency Type="AddOnInstructionDefinition" Name="LxIOPath"/>
</Dependencies>
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</EncodedData>
<AddOnInstructionDefinition Name="LxIO" Revision="2.0" Vendor="Jeremy Medders" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2019-11-11T18:04:33.847Z" CreatedBy="APEX\Jeremy" EditedDate="2025-01-22T23:39:43.941Z" EditedBy="APEX\Jeremy" SoftwareRevision="v37.00"
>
<Description>
<![CDATA[IO Status]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="IO" TagType="Base" DataType="MODULE" Usage="InOut" Required="true" Visible="true">
<Description>
<![CDATA[Name of the module in the I/O tree.]]>
</Description>
</Parameter>
<Parameter Name="Val_Instance" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Instance" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Val_Status" TagType="Alias" Usage="Output" Radix="Hex" AliasFor="Local.Status" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Standby" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Standby" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Faulted" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Faulted" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Validating" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Validating" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Connecting" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Connecting" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Online" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Online" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_ShuttingDown" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.ShuttingDown" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Inhibited" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Inhibited" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Waiting" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Waiting" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Reconfiguring" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Reconfiguring" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_FirmwareUpdating" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.FirmwareUpdating" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Configuring" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Configuring" Required="false" Visible="false" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Offline" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="Local.Offline" Required="false" Visible="true" ExternalAccess="Read Only"/>
</Parameters>
<LocalTags>
<LocalTag Name="Local" DataType="LxIOModule" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[[0,0,0,0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="LxIOModule">
<DataValueMember Name="Status" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="StatusBits" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Standby" DataType="BOOL" Value="0"/>
<DataValueMember Name="Faulted" DataType="BOOL" Value="0"/>
<DataValueMember Name="Validating" DataType="BOOL" Value="0"/>
<DataValueMember Name="Connecting" DataType="BOOL" Value="0"/>
<DataValueMember Name="Online" DataType="BOOL" Value="0"/>
<DataValueMember Name="ShuttingDown" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inhibited" DataType="BOOL" Value="0"/>
<DataValueMember Name="Waiting" DataType="BOOL" Value="0"/>
<DataValueMember Name="Reconfiguring" DataType="BOOL" Value="0"/>
<DataValueMember Name="FirmwareUpdating" DataType="BOOL" Value="0"/>
<DataValueMember Name="Configuring" DataType="BOOL" Value="0"/>
<DataValueMember Name="Offline" DataType="BOOL" Value="0"/>
<DataValueMember Name="FaultCode" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="FaultInfo" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Mode" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Instance" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[/*]]>
</Line>
<Line Number="1">
<![CDATA[	LxIO]]>
</Line>
<Line Number="2">
<![CDATA[	]]>
</Line>
<Line Number="3">
<![CDATA[	EntryStatus Map]]>
</Line>
<Line Number="4">
<![CDATA[	• 0x0000: Standby]]>
</Line>
<Line Number="5">
<![CDATA[	• 0x1000: Faulted]]>
</Line>
<Line Number="6">
<![CDATA[	• 0x2000: Validating]]>
</Line>
<Line Number="7">
<![CDATA[	• 0x3000: Connecting]]>
</Line>
<Line Number="8">
<![CDATA[	• 0x4000: Running]]>
</Line>
<Line Number="9">
<![CDATA[	• 0x5000: Shutting Down]]>
</Line>
<Line Number="10">
<![CDATA[	• 0x6000: Inhibited]]>
</Line>
<Line Number="11">
<![CDATA[	• 0x7000: Waiting]]>
</Line>
<Line Number="12">
<![CDATA[	• 0x8000: Reconfiguring]]>
</Line>
<Line Number="13">
<![CDATA[	• 0x9000: Firmware Updating]]>
</Line>
<Line Number="14">
<![CDATA[	• 0xA000: Configuring]]>
</Line>
<Line Number="15">
<![CDATA[*/]]>
</Line>
<Line Number="16">
<![CDATA[]]>
</Line>
<Line Number="17">
<![CDATA[GSV(Module, IO, Instance, Local.Instance);]]>
</Line>
<Line Number="18">
<![CDATA[GSV(Module, IO, EntryStatus, Local.Status);]]>
</Line>
<Line Number="19">
<![CDATA[Local.StatusBits := 2 ** (Local.Status / 4096);]]>
</Line>
<Line Number="20">
<![CDATA[Local.Offline := NOT (Local.Online OR Local.Inhibited);]]>
</Line>
<Line Number="21">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
<Routine Name="Prescan" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
<Line Number="1">
<![CDATA[/*]]>
</Line>
<Line Number="2">
<![CDATA[	LxIO]]>
</Line>
<Line Number="3">
<![CDATA[*/]]>
</Line>
<Line Number="4">
<![CDATA[]]>
</Line>
<Line Number="5">
<![CDATA[Local.Instance := 0;]]>
</Line>
<Line Number="6">
<![CDATA[Local.Status := 0;]]>
</Line>
<Line Number="7">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
<Dependencies>
<Dependency Type="DataType" Name="LxIOModule"/>
</Dependencies>
</AddOnInstructionDefinition>
<AddOnInstructionDefinition Use="Target" Name="MBTCP_Client" Revision="3.0" Vendor="Jeremy Medders" ExecutePrescan="true" ExecutePostscan="false" ExecuteEnableInFalse="false" CreatedDate="2019-12-05T18:51:23.267Z" CreatedBy="Not Available" EditedDate="2025-06-05T03:27:39.909Z" EditedBy="APEX\Jeremy"
 SoftwareRevision="v37.00">
<Description>
<![CDATA[Modbus TCP Client]]>
</Description>
<Parameters>
<Parameter Name="EnableIn" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Input - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="EnableOut" TagType="Base" DataType="BOOL" Usage="Output" Radix="Decimal" Required="false" Visible="false" ExternalAccess="Read Only">
<Description>
<![CDATA[Enable Output - System Defined Parameter]]>
</Description>
</Parameter>
<Parameter Name="IO" TagType="Base" DataType="MODULE" Usage="InOut" Required="true" Visible="true"/>
<Parameter Name="IO_Instance" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LxIO.Val_Instance" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="IO_Status" TagType="Alias" Usage="Output" Radix="Hex" AliasFor="LxIO.Val_Status" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Inp_Enable" TagType="Base" DataType="BOOL" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read/Write">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Ref_Connection" TagType="Base" DataType="MBTCP_ClientConnection" Usage="InOut" Required="true" Visible="true" Constant="false"/>
<Parameter Name="Ref_List" TagType="Base" DataType="MBTCP_ClientTransaction" Dimensions="1" Usage="InOut" Required="true" Visible="true" Constant="false"/>
<Parameter Name="Ref_Data" TagType="Base" DataType="MBTCP_ClientData" Usage="InOut" Required="true" Visible="true" Constant="false"/>
<Parameter Name="Msg4B" TagType="Base" DataType="MESSAGE" Usage="InOut" Required="true" Visible="true">
<Description>
<![CDATA[0x4B: CreateSocket]]>
</Description>
</Parameter>
<Parameter Name="Msg4C" TagType="Base" DataType="MESSAGE" Usage="InOut" Required="true" Visible="true">
<Description>
<![CDATA[0x4C: OpenConnection]]>
</Description>
</Parameter>
<Parameter Name="Msg4D" TagType="Base" DataType="MESSAGE" Usage="InOut" Required="true" Visible="true">
<Description>
<![CDATA[0x4D: ReadSocket]]>
</Description>
</Parameter>
<Parameter Name="Msg4E" TagType="Base" DataType="MESSAGE" Usage="InOut" Required="true" Visible="true">
<Description>
<![CDATA[0x4E: WriteSocket]]>
</Description>
</Parameter>
<Parameter Name="Msg4F" TagType="Base" DataType="MESSAGE" Usage="InOut" Required="true" Visible="true">
<Description>
<![CDATA[0x4F: DeleteSocket]]>
</Description>
</Parameter>
<Parameter Name="Msg10" TagType="Base" DataType="MESSAGE" Usage="InOut" Required="true" Visible="true">
<Description>
<![CDATA[0x10: SetAttributeSingle]]>
</Description>
</Parameter>
<Parameter Name="Cfg_RetryInterval" TagType="Base" DataType="DINT" Usage="Input" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[1000]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="1000"/>
</DefaultData>
</Parameter>
<Parameter Name="Sts_Online" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LxIO.Sts_Online" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Inhibited" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LxIO.Sts_Inhibited" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Offline" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="LxIO.Sts_Offline" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Enabled" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ClientStatus.0" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Connected" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ClientStatus.1" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Fault" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ClientStatus.2" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Overlap" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ClientStatus.3" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Sts_Overload" TagType="Alias" Usage="Output" Radix="Decimal" AliasFor="ClientStatus.4" Required="false" Visible="true" ExternalAccess="Read Only"/>
<Parameter Name="Val_Result" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<Description>
<![CDATA[0: Good, -6: Connection failed, -7: Delete all failed, -8: Create failed, -9: Connection failed, -10: Connection dropped, -11: Error in setting socket parameter, -12: Disabled.]]>
</Description>
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
<Parameter Name="Val_SocketInstance" TagType="Base" DataType="DINT" Usage="Output" Radix="Decimal" Required="false" Visible="true" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</Parameter>
</Parameters>
<LocalTags>
<LocalTag Name="Step" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="CreateParams" DataType="LxSocketCreateParameters" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[0,0,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="LxSocketCreateParameters">
<DataValueMember Name="Type" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Family" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Port" DataType="INT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Address" DataType="DINT" Radix="Decimal" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="SockInst" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ConnParams" DataType="MBTCP_ConnectParameters" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[0,[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="MBTCP_ConnectParameters">
<DataValueMember Name="Timeout" DataType="DINT" Radix="Decimal" Value="0"/>
<StructureMember Name="DestAddress" DataType="STR_32">
<DataValueMember Name="LEN" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="DATA" DataType="STR_32" Radix="ASCII">
<![CDATA[]]>
</DataValueMember>
</StructureMember>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="PortStr" DataType="STR_8" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[6,'?port=$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="6">
<![CDATA['?port=']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Str16" DataType="STR_16" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="MsgReadSrc" DataType="DINT" Dimensions="2" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Array DataType="DINT" Dimensions="2" Radix="Decimal">
<Element Index="[0]" Value="0"/>
<Element Index="[1]" Value="0"/>
</Array>
</DefaultData>
</LocalTag>
<LocalTag Name="Str462" DataType="STR_462" ExternalAccess="None">
<DefaultData Format="L5K">

</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="Buffer" DataType="STR_4096" ExternalAccess="None">
<DefaultData Format="L5K">

</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="WriteIndex" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="IDCount" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="DINT" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="AddlLen" DataType="INT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="AddlReadLen" DataType="INT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TxnID" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="INT" DataType="INT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="AddlLen1" DataType="INT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="INT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MBCmdLen" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="CWRCount" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="CWROffset" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MBPacket" DataType="STR_462" ExternalAccess="None">
<DefaultData Format="L5K">

</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="DataReceived" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="CmdFromPacket" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MBID" DataType="STR_8" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="MBUnit" DataType="STR_8" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="MBBytes" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="MBCmdStr" DataType="STR_462" ExternalAccess="None">
<DefaultData Format="L5K">

</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="i" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ListSize" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="IPStr" DataType="STR_16" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00']]]>
</DefaultData>
<DefaultData Format="String" Length="0">
<![CDATA['']]>
</DefaultData>
</LocalTag>
<LocalTag Name="CmdLast" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="StepTimer" DataType="FBD_TIMER" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[1,0,0,0,0,0,0,0,0,4,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="FBD_TIMER">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="TimerEnable" DataType="BOOL" Value="0"/>
<DataValueMember Name="PRE" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Reset" DataType="BOOL" Value="0"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="ACC" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="EN" DataType="BOOL" Value="0"/>
<DataValueMember Name="TT" DataType="BOOL" Value="0"/>
<DataValueMember Name="DN" DataType="BOOL" Value="0"/>
<DataValueMember Name="Status" DataType="DINT" Radix="Hex" Value="16#0000_0000"/>
<DataValueMember Name="InstructFault" DataType="BOOL" Value="0"/>
<DataValueMember Name="PresetInv" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="Enabled" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Connected" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Fault" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Result" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="StrPos" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ByteIndex" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="BitIndex" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="TxnFound" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="BRSError" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Bit" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Byte" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="LastAddr" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="DINT2" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Overlap" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Overload" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="PG" DataType="LpPulse" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[1,1000,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="LpPulse">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Enable" DataType="BOOL" Value="0"/>
<DataValueMember Name="Inp_Interval" DataType="DINT" Radix="Decimal" Value="1000"/>
<DataValueMember Name="Sts_Enabled" DataType="BOOL" Value="0"/>
<DataValueMember Name="Out" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="LxMsg" DataType="LxMsg" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[1,0,0,0,0,30000000,[1,0,0]]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="LxMsg">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Class" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Instance" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Attribute" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="RequestLength" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="UnconnectedTimeout" DataType="DINT" Radix="Decimal" Value="30000000"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="LxIO" DataType="LxIO" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[[1,[0,0,0,0,0,0]]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="LxIO">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
<DataValueMember Name="Val_Instance" DataType="DINT" Radix="Decimal" Value="0"/>
<DataValueMember Name="Val_Status" DataType="DINT" Radix="Hex" Value="16#0000_0000"/>
<DataValueMember Name="Sts_Standby" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Faulted" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Validating" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Connecting" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Online" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_ShuttingDown" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Inhibited" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Waiting" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Reconfiguring" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_FirmwareUpdating" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Configuring" DataType="BOOL" Value="0"/>
<DataValueMember Name="Sts_Offline" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="n" DataType="UDINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="UDINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="v" DataType="UDINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="UDINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="USINT" DataType="USINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="USINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="IPv4" DataType="UDINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="UDINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="ClientStatus" DataType="DINT" Radix="Decimal" ExternalAccess="Read Only">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="LxIOPath" DataType="LxIOPath" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[[1,0,0]]]>
</DefaultData>
<DefaultData Format="Decorated">
<Structure DataType="LxIOPath">
<DataValueMember Name="EnableIn" DataType="BOOL" Value="1"/>
<DataValueMember Name="EnableOut" DataType="BOOL" Value="0"/>
</Structure>
</DefaultData>
</LocalTag>
<LocalTag Name="LxIOInst" DataType="DINT" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="DINT" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
<LocalTag Name="Init" DataType="BOOL" Radix="Decimal" ExternalAccess="None">
<DefaultData Format="L5K">
<![CDATA[0]]>
</DefaultData>
<DefaultData Format="Decorated">
<DataValue DataType="BOOL" Radix="Decimal" Value="0"/>
</DefaultData>
</LocalTag>
</LocalTags>
<Routines>
<Routine Name="Logic" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
<Line Number="1">
<![CDATA[/*]]>
</Line>
<Line Number="2">
<![CDATA[	MBTCP_Client]]>
</Line>
<Line Number="3">
<![CDATA[	----------------------------------------]]>
</Line>
<Line Number="4">
<![CDATA[*/]]>
</Line>
<Line Number="5">
<![CDATA[]]>
</Line>
<Line Number="6">
<![CDATA[LxIO(LxIO, IO);]]>
</Line>
<Line Number="7">
<![CDATA[SIZE(Ref_List, 0, ListSize);]]>
</Line>
<Line Number="8">
<![CDATA[Enabled := Inp_Enable & LxIO.Sts_Online;]]>
</Line>
<Line Number="9">
<![CDATA[]]>
</Line>
<Line Number="10">
<![CDATA[if (LxIO.Val_Instance <> LxIOInst) then]]>
</Line>
<Line Number="11">
<![CDATA[	LxIOInst := LxIO.Val_Instance;]]>
</Line>
<Line Number="12">
<![CDATA[	Init := 0;]]>
</Line>
<Line Number="13">
<![CDATA[end_if;]]>
</Line>
<Line Number="14">
<![CDATA[]]>
</Line>
<Line Number="15">
<![CDATA[if (NOT Init) then]]>
</Line>
<Line Number="16">
<![CDATA[	Step := 905; // delete existing socket on changeover]]>
</Line>
<Line Number="17">
<![CDATA[	Init := 1;]]>
</Line>
<Line Number="18">
<![CDATA[end_if;]]>
</Line>
<Line Number="19">
<![CDATA[]]>
</Line>
<Line Number="20">
<![CDATA[if (Cfg_RetryInterval < 100 OR 5000 < Cfg_RetryInterval) then]]>
</Line>
<Line Number="21">
<![CDATA[	Cfg_RetryInterval := 1000;]]>
</Line>
<Line Number="22">
<![CDATA[end_if;]]>
</Line>
<Line Number="23">
<![CDATA[]]>
</Line>
<Line Number="24">
<![CDATA[PG.Inp_Interval := Cfg_RetryInterval;]]>
</Line>
<Line Number="25">
<![CDATA[PG.Inp_Enable := Enabled & Step = 0;]]>
</Line>
<Line Number="26">
<![CDATA[LpPulse(PG);]]>
</Line>
<Line Number="27">
<![CDATA[]]>
</Line>
<Line Number="28">
<![CDATA[if (PG.Out) then]]>
</Line>
<Line Number="29">
<![CDATA[	Fault := 0;]]>
</Line>
<Line Number="30">
<![CDATA[	LxIOPath(LxIOPath, IO, Msg4B.Path);]]>
</Line>
<Line Number="31">
<![CDATA[	COP(Msg4B.Path, Msg4C.Path, 1);]]>
</Line>
<Line Number="32">
<![CDATA[	COP(Msg4B.Path, Msg4D.Path, 1);]]>
</Line>
<Line Number="33">
<![CDATA[	COP(Msg4B.Path, Msg4E.Path, 1);]]>
</Line>
<Line Number="34">
<![CDATA[	COP(Msg4B.Path, Msg4F.Path, 1);]]>
</Line>
<Line Number="35">
<![CDATA[	COP(Msg4B.Path, Msg10.Path, 1);]]>
</Line>
<Line Number="36">
<![CDATA[	Step := 95;]]>
</Line>
<Line Number="37">
<![CDATA[end_if;]]>
</Line>
<Line Number="38">
<![CDATA[]]>
</Line>
<Line Number="39">
<![CDATA[if (Step = 95 & (Msg4B.DN OR Msg4B.ER OR NOT Msg4B.EN)) then // SocketCreate]]>
</Line>
<Line Number="40">
<![CDATA[	]]>
</Line>
<Line Number="41">
<![CDATA[	CreateParams.Type := 1;]]>
</Line>
<Line Number="42">
<![CDATA[	CreateParams.Family := 2;]]>
</Line>
<Line Number="43">
<![CDATA[	CreateParams.Port := 0;]]>
</Line>
<Line Number="44">
<![CDATA[	COP(Ref_Connection.LocalAddress, IPStr, 1); // parse local IP (for Dual-IP mode)]]>
</Line>
<Line Number="45">
<![CDATA[	i := 0;]]>
</Line>
<Line Number="46">
<![CDATA[	n := 0;]]>
</Line>
<Line Number="47">
<![CDATA[	v := 0;]]>
</Line>
<Line Number="48">
<![CDATA[	]]>
</Line>
<Line Number="49">
<![CDATA[	while i < IPStr.LEN do // IPv4]]>
</Line>
<Line Number="50">
<![CDATA[		COP(IPStr.DATA[i], USINT, 1);]]>
</Line>
<Line Number="51">
<![CDATA[		USINT := USINT - 48;]]>
</Line>
<Line Number="52">
<![CDATA[		]]>
</Line>
<Line Number="53">
<![CDATA[		if (USINT <= 9) then // filter '.']]>
</Line>
<Line Number="54">
<![CDATA[			n := n * 10 + USINT;]]>
</Line>
<Line Number="55">
<![CDATA[		else]]>
</Line>
<Line Number="56">
<![CDATA[			v := v * 256 + n;]]>
</Line>
<Line Number="57">
<![CDATA[			n := 0;]]>
</Line>
<Line Number="58">
<![CDATA[		end_if;]]>
</Line>
<Line Number="59">
<![CDATA[		]]>
</Line>
<Line Number="60">
<![CDATA[		i := i + 1;]]>
</Line>
<Line Number="61">
<![CDATA[	end_while;]]>
</Line>
<Line Number="62">
<![CDATA[	]]>
</Line>
<Line Number="63">
<![CDATA[	IPv4 := v * 256 + n;]]>
</Line>
<Line Number="64">
<![CDATA[	COP(IPv4, CreateParams.Address, 1);]]>
</Line>
<Line Number="65">
<![CDATA[	CreateParams.Address := 0;]]>
</Line>
<Line Number="66">
<![CDATA[	COP(CreateParams, Ref_Connection.MsgSrc[0], 12);]]>
</Line>
<Line Number="67">
<![CDATA[	LxMsg(LxMsg, Msg4B, 16#342, 0, 0, 12, 1000000, 0);]]>
</Line>
<Line Number="68">
<![CDATA[	MSG(Msg4B);]]>
</Line>
<Line Number="69">
<![CDATA[	Step := 100;]]>
</Line>
<Line Number="70">
<![CDATA[end_if;]]>
</Line>
<Line Number="71">
<![CDATA[]]>
</Line>
<Line Number="72">
<![CDATA[if (Step = 100 & (Msg4B.DN OR Msg4B.ER OR NOT Msg4B.EN)) then]]>
</Line>
<Line Number="73">
<![CDATA[	]]>
</Line>
<Line Number="74">
<![CDATA[	if (Msg4B.DN) then]]>
</Line>
<Line Number="75">
<![CDATA[		COP(Ref_Connection.MsgDest[0], SockInst, 1);]]>
</Line>
<Line Number="76">
<![CDATA[		Step := 105;]]>
</Line>
<Line Number="77">
<![CDATA[	end_if;]]>
</Line>
<Line Number="78">
<![CDATA[	]]>
</Line>
<Line Number="79">
<![CDATA[	if (Msg4B.ER) then]]>
</Line>
<Line Number="80">
<![CDATA[		Fault := 1;]]>
</Line>
<Line Number="81">
<![CDATA[		Result := -8;]]>
</Line>
<Line Number="82">
<![CDATA[		Step := 900;]]>
</Line>
<Line Number="83">
<![CDATA[	end_if;]]>
</Line>
<Line Number="84">
<![CDATA[	]]>
</Line>
<Line Number="85">
<![CDATA[	if (NOT Enabled) then]]>
</Line>
<Line Number="86">
<![CDATA[		Step := 800;]]>
</Line>
<Line Number="87">
<![CDATA[	end_if;]]>
</Line>
<Line Number="88">
<![CDATA[end_if;]]>
</Line>
<Line Number="89">
<![CDATA[]]>
</Line>
<Line Number="90">
<![CDATA[if (Step = 105 & (Msg10.DN OR Msg10.ER OR NOT Msg10.EN)) then // SetAttribute]]>
</Line>
<Line Number="91">
<![CDATA[	]]>
</Line>
<Line Number="92">
<![CDATA[	DINT := 1;]]>
</Line>
<Line Number="93">
<![CDATA[	COP(DINT, Ref_Connection.MsgSrc[496], 4);]]>
</Line>
<Line Number="94">
<![CDATA[	LxMsg(LxMsg, Msg10, 16#342, SockInst, 10, 4, 1000000, 0);]]>
</Line>
<Line Number="95">
<![CDATA[	MSG(Msg10);]]>
</Line>
<Line Number="96">
<![CDATA[	Step := 110;]]>
</Line>
<Line Number="97">
<![CDATA[end_if;]]>
</Line>
<Line Number="98">
<![CDATA[]]>
</Line>
<Line Number="99">
<![CDATA[if (Step = 110 & (Msg10.DN OR Msg10.ER OR NOT Msg10.EN)) then]]>
</Line>
<Line Number="100">
<![CDATA[	]]>
</Line>
<Line Number="101">
<![CDATA[	if (Msg10.DN OR Msg10.ER) then]]>
</Line>
<Line Number="102">
<![CDATA[		if (Enabled) then]]>
</Line>
<Line Number="103">
<![CDATA[			Step := 195;]]>
</Line>
<Line Number="104">
<![CDATA[		else]]>
</Line>
<Line Number="105">
<![CDATA[			Step := 800;]]>
</Line>
<Line Number="106">
<![CDATA[		end_if;]]>
</Line>
<Line Number="107">
<![CDATA[	end_if;]]>
</Line>
<Line Number="108">
<![CDATA[end_if;]]>
</Line>
<Line Number="109">
<![CDATA[]]>
</Line>
<Line Number="110">
<![CDATA[if (Step = 195 & (Msg4C.DN OR Msg4C.ER OR NOT Msg4C.EN)) then // SocketConnect]]>
</Line>
<Line Number="111">
<![CDATA[	]]>
</Line>
<Line Number="112">
<![CDATA[	ConnParams.Timeout := 5000;]]>
</Line>
<Line Number="113">
<![CDATA[	CONCAT(Ref_Connection.DestAddress, PortStr, ConnParams.DestAddress);]]>
</Line>
<Line Number="114">
<![CDATA[	DTOS(Ref_Connection.DestPort, Str16);]]>
</Line>
<Line Number="115">
<![CDATA[	CONCAT(ConnParams.DestAddress, Str16, ConnParams.DestAddress);]]>
</Line>
<Line Number="116">
<![CDATA[	Msg4C.REQ_LEN := ConnParams.DestAddress.LEN + 8;]]>
</Line>
<Line Number="117">
<![CDATA[	COP(ConnParams, Ref_Connection.MsgSrc[0], Msg4C.REQ_LEN);]]>
</Line>
<Line Number="118">
<![CDATA[	LxMsg(LxMsg, Msg4C, 16#342, SockInst, 0, Msg4C.REQ_LEN, 10000000, 0);]]>
</Line>
<Line Number="119">
<![CDATA[	MSG(Msg4C);]]>
</Line>
<Line Number="120">
<![CDATA[	Step := 200;]]>
</Line>
<Line Number="121">
<![CDATA[end_if;]]>
</Line>
<Line Number="122">
<![CDATA[]]>
</Line>
<Line Number="123">
<![CDATA[if (Step = 200 & (Msg4C.DN OR Msg4C.ER OR NOT Msg4C.EN)) then]]>
</Line>
<Line Number="124">
<![CDATA[	]]>
</Line>
<Line Number="125">
<![CDATA[	if (Msg4C.DN) then]]>
</Line>
<Line Number="126">
<![CDATA[		Connected := 1;]]>
</Line>
<Line Number="127">
<![CDATA[		Result := 0;]]>
</Line>
<Line Number="128">
<![CDATA[		Step := 300;]]>
</Line>
<Line Number="129">
<![CDATA[		]]>
</Line>
<Line Number="130">
<![CDATA[		i := 0;]]>
</Line>
<Line Number="131">
<![CDATA[		while (i < ListSize) do]]>
</Line>
<Line Number="132">
<![CDATA[			Ref_List[i].Diag.StatusBits := 0;]]>
</Line>
<Line Number="133">
<![CDATA[			i := i + 1;]]>
</Line>
<Line Number="134">
<![CDATA[		end_while;]]>
</Line>
<Line Number="135">
<![CDATA[	end_if;]]>
</Line>
<Line Number="136">
<![CDATA[	]]>
</Line>
<Line Number="137">
<![CDATA[	if (Msg4C.ER) then]]>
</Line>
<Line Number="138">
<![CDATA[		Fault := 1;]]>
</Line>
<Line Number="139">
<![CDATA[		Result := -9;]]>
</Line>
<Line Number="140">
<![CDATA[		Step := 900;]]>
</Line>
<Line Number="141">
<![CDATA[	end_if;]]>
</Line>
<Line Number="142">
<![CDATA[end_if;]]>
</Line>
<Line Number="143">
<![CDATA[]]>
</Line>
<Line Number="144">
<![CDATA[/*]]>
</Line>
<Line Number="145">
<![CDATA[	3xx: Triggers]]>
</Line>
<Line Number="146">
<![CDATA[	4xx: Writes]]>
</Line>
<Line Number="147">
<![CDATA[	5xx: Reads]]>
</Line>
<Line Number="148">
<![CDATA[	6xx: Packet Processing]]>
</Line>
<Line Number="149">
<![CDATA[*/]]>
</Line>
<Line Number="150">
<![CDATA[if (Step = 300) then]]>
</Line>
<Line Number="151">
<![CDATA[	Step := 310;]]>
</Line>
<Line Number="152">
<![CDATA[	]]>
</Line>
<Line Number="153">
<![CDATA[	if (NOT Enabled) then]]>
</Line>
<Line Number="154">
<![CDATA[		Step := 800;]]>
</Line>
<Line Number="155">
<![CDATA[	end_if;]]>
</Line>
<Line Number="156">
<![CDATA[end_if;]]>
</Line>
<Line Number="157">
<![CDATA[]]>
</Line>
<Line Number="158">
<![CDATA[if (Step = 310) then]]>
</Line>
<Line Number="159">
<![CDATA[	Step := 400;]]>
</Line>
<Line Number="160">
<![CDATA[	]]>
</Line>
<Line Number="161">
<![CDATA[	i := 0;]]>
</Line>
<Line Number="162">
<![CDATA[	while (i < ListSize) do]]>
</Line>
<Line Number="163">
<![CDATA[		if (Ref_List[i].Enable) then]]>
</Line>
<Line Number="164">
<![CDATA[			Ref_List[i].Diag.Trigger := 0;]]>
</Line>
<Line Number="165">
<![CDATA[			]]>
</Line>
<Line Number="166">
<![CDATA[			if (Ref_List[i].Diag.IntervalTimer.DN) then]]>
</Line>
<Line Number="167">
<![CDATA[				Ref_List[i].Diag.IntervalTimer.Reset := 1;]]>
</Line>
<Line Number="168">
<![CDATA[				]]>
</Line>
<Line Number="169">
<![CDATA[				if (NOT Ref_List[i].Diag.RequestBuilt) then]]>
</Line>
<Line Number="170">
<![CDATA[					Ref_List[i].Diag.Trigger := 1;]]>
</Line>
<Line Number="171">
<![CDATA[					Ref_List[i].Diag.Overlap := 0;]]>
</Line>
<Line Number="172">
<![CDATA[				else]]>
</Line>
<Line Number="173">
<![CDATA[					Ref_List[i].Diag.Overlap := 1;]]>
</Line>
<Line Number="174">
<![CDATA[				end_if;]]>
</Line>
<Line Number="175">
<![CDATA[			end_if;]]>
</Line>
<Line Number="176">
<![CDATA[		else]]>
</Line>
<Line Number="177">
<![CDATA[			Ref_List[i].Diag.StatusBits := 0;]]>
</Line>
<Line Number="178">
<![CDATA[		end_if;]]>
</Line>
<Line Number="179">
<![CDATA[		]]>
</Line>
<Line Number="180">
<![CDATA[		i := i + 1;]]>
</Line>
<Line Number="181">
<![CDATA[	end_while;]]>
</Line>
<Line Number="182">
<![CDATA[end_if;]]>
</Line>
<Line Number="183">
<![CDATA[]]>
</Line>
<Line Number="184">
<![CDATA[/*]]>
</Line>
<Line Number="185">
<![CDATA[	Write section. Rebuild the request string if the RequestBuilt flag is cleared.]]>
</Line>
<Line Number="186">
<![CDATA[*/]]>
</Line>
<Line Number="187">
<![CDATA[if (Step = 400) then]]>
</Line>
<Line Number="188">
<![CDATA[	WriteIndex := 0;]]>
</Line>
<Line Number="189">
<![CDATA[	Step := 410;]]>
</Line>
<Line Number="190">
<![CDATA[end_if;]]>
</Line>
<Line Number="191">
<![CDATA[]]>
</Line>
<Line Number="192">
<![CDATA[if (Step = 410) then]]>
</Line>
<Line Number="193">
<![CDATA[	if (Ref_List[WriteIndex].Diag.Trigger) then]]>
</Line>
<Line Number="194">
<![CDATA[		BRSError := 0;]]>
</Line>
<Line Number="195">
<![CDATA[		]]>
</Line>
<Line Number="196">
<![CDATA[		// Check whether transaction type is valid]]>
</Line>
<Line Number="197">
<![CDATA[		if (1 <= Ref_List[WriteIndex].Type & Ref_List[WriteIndex].Type <= 6 OR ]]>
</Line>
<Line Number="198">
<![CDATA[			Ref_List[WriteIndex].Type = 15 OR Ref_List[WriteIndex].Type = 16) then]]>
</Line>
<Line Number="199">
<![CDATA[			]]>
</Line>
<Line Number="200">
<![CDATA[			// For single-write operations, set transaction count to 1 for range checking]]>
</Line>
<Line Number="201">
<![CDATA[			if (Ref_List[WriteIndex].Type = 5 OR Ref_List[WriteIndex].Type = 6) then]]>
</Line>
<Line Number="202">
<![CDATA[				Ref_List[WriteIndex].Count := 1;]]>
</Line>
<Line Number="203">
<![CDATA[			end_if;]]>
</Line>
<Line Number="204">
<![CDATA[			]]>
</Line>
<Line Number="205">
<![CDATA[			// Check whether Discrete/Register operations will fit within local arrays]]>
</Line>
<Line Number="206">
<![CDATA[			if (Ref_List[WriteIndex].LocalAddress + Ref_List[WriteIndex].Count <= 1024 & ]]>
</Line>
<Line Number="207">
<![CDATA[				0 <= Ref_List[WriteIndex].LocalAddress & 0 <= Ref_List[WriteIndex].Count) then]]>
</Line>
<Line Number="208">
<![CDATA[				]]>
</Line>
<Line Number="209">
<![CDATA[				// Build MBAP Header (Transaction ID, Protocol ID (0), Length, Unit ID)]]>
</Line>
<Line Number="210">
<![CDATA[				SWPB(Ref_List[WriteIndex].Diag.ID, REVERSE, INT);]]>
</Line>
<Line Number="211">
<![CDATA[				COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[0], 2);]]>
</Line>
<Line Number="212">
<![CDATA[				Ref_List[WriteIndex].Diag.Request.DATA[2] := 0;]]>
</Line>
<Line Number="213">
<![CDATA[				Ref_List[WriteIndex].Diag.Request.DATA[3] := 0;]]>
</Line>
<Line Number="214">
<![CDATA[				Ref_List[WriteIndex].Diag.Request.LEN := 4;]]>
</Line>
<Line Number="215">
<![CDATA[				]]>
</Line>
<Line Number="216">
<![CDATA[				// Handle length 6 transactions (adds length to header)]]>
</Line>
<Line Number="217">
<![CDATA[				if (1 <= Ref_List[WriteIndex].Type & Ref_List[WriteIndex].Type <= 6) then]]>
</Line>
<Line Number="218">
<![CDATA[					INT := 6;]]>
</Line>
<Line Number="219">
<![CDATA[					SWPB(INT, REVERSE, INT);]]>
</Line>
<Line Number="220">
<![CDATA[					COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[4], 2);]]>
</Line>
<Line Number="221">
<![CDATA[					Ref_List[WriteIndex].Diag.Request.LEN := 6;]]>
</Line>
<Line Number="222">
<![CDATA[					]]>
</Line>
<Line Number="223">
<![CDATA[				elsif (Ref_List[WriteIndex].Type = 15) then]]>
</Line>
<Line Number="224">
<![CDATA[					INT := Ref_List[WriteIndex].Count / 8;]]>
</Line>
<Line Number="225">
<![CDATA[					]]>
</Line>
<Line Number="226">
<![CDATA[					if (INT * 8 <= Ref_List[WriteIndex].Count) then]]>
</Line>
<Line Number="227">
<![CDATA[						if (INT * 8 < Ref_List[WriteIndex].Count) then]]>
</Line>
<Line Number="228">
<![CDATA[							INT := INT + 1;]]>
</Line>
<Line Number="229">
<![CDATA[						end_if;]]>
</Line>
<Line Number="230">
<![CDATA[						]]>
</Line>
<Line Number="231">
<![CDATA[						INT := INT + 7;]]>
</Line>
<Line Number="232">
<![CDATA[						SWPB(INT, REVERSE, INT);]]>
</Line>
<Line Number="233">
<![CDATA[						COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[4], 2);]]>
</Line>
<Line Number="234">
<![CDATA[						Ref_List[WriteIndex].Diag.Request.LEN := 6;]]>
</Line>
<Line Number="235">
<![CDATA[					end_if;]]>
</Line>
<Line Number="236">
<![CDATA[					]]>
</Line>
<Line Number="237">
<![CDATA[				elsif (Ref_List[WriteIndex].Type = 16) then]]>
</Line>
<Line Number="238">
<![CDATA[					INT := (Ref_List[WriteIndex].Count * 2) + 7;]]>
</Line>
<Line Number="239">
<![CDATA[					SWPB(INT, REVERSE, INT);]]>
</Line>
<Line Number="240">
<![CDATA[					COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[4], 2);]]>
</Line>
<Line Number="241">
<![CDATA[					Ref_List[WriteIndex].Diag.Request.LEN := 6;]]>
</Line>
<Line Number="242">
<![CDATA[				end_if;]]>
</Line>
<Line Number="243">
<![CDATA[				]]>
</Line>
<Line Number="244">
<![CDATA[				// Add Station ID to header]]>
</Line>
<Line Number="245">
<![CDATA[				COP(Ref_List[WriteIndex].StationID, Ref_List[WriteIndex].Diag.Request.DATA[6], 1);]]>
</Line>
<Line Number="246">
<![CDATA[				COP(Ref_List[WriteIndex].Type, Ref_List[WriteIndex].Diag.Request.DATA[7], 1);]]>
</Line>
<Line Number="247">
<![CDATA[				COP(Ref_List[WriteIndex].BeginAddress, INT, 1);]]>
</Line>
<Line Number="248">
<![CDATA[				SWPB(INT, REVERSE, INT);]]>
</Line>
<Line Number="249">
<![CDATA[				COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[8], 2);]]>
</Line>
<Line Number="250">
<![CDATA[				Ref_List[WriteIndex].Diag.Request.LEN := 10;]]>
</Line>
<Line Number="251">
<![CDATA[				]]>
</Line>
<Line Number="252">
<![CDATA[				// Add reference count for transactions requiring them]]>
</Line>
<Line Number="253">
<![CDATA[				if (1 <= Ref_List[WriteIndex].Type & Ref_List[WriteIndex].Type <= 4 OR ]]>
</Line>
<Line Number="254">
<![CDATA[					Ref_List[WriteIndex].Type = 15 OR Ref_List[WriteIndex].Type = 16) then]]>
</Line>
<Line Number="255">
<![CDATA[					SWPB(Ref_List[WriteIndex].Count, REVERSE, INT);]]>
</Line>
<Line Number="256">
<![CDATA[					DINT2 := Ref_List[WriteIndex].Diag.Request.LEN;]]>
</Line>
<Line Number="257">
<![CDATA[					COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[DINT2], 2);]]>
</Line>
<Line Number="258">
<![CDATA[					Ref_List[WriteIndex].Diag.Request.LEN := Ref_List[WriteIndex].Diag.Request.LEN + 2;]]>
</Line>
<Line Number="259">
<![CDATA[				end_if;]]>
</Line>
<Line Number="260">
<![CDATA[				]]>
</Line>
<Line Number="261">
<![CDATA[				// Write Single Coil (0x0000 or 0xFF00)]]>
</Line>
<Line Number="262">
<![CDATA[				if (Ref_List[WriteIndex].Type = 5) then]]>
</Line>
<Line Number="263">
<![CDATA[					DINT := Ref_List[WriteIndex].LocalAddress; // tINT2 -> tDINT]]>
</Line>
<Line Number="264">
<![CDATA[					]]>
</Line>
<Line Number="265">
<![CDATA[					if (NOT Ref_Data.Coils[DINT]) then // tINT2 -> tDINT]]>
</Line>
<Line Number="266">
<![CDATA[						INT := 16#0000;]]>
</Line>
<Line Number="267">
<![CDATA[					else]]>
</Line>
<Line Number="268">
<![CDATA[						INT := 16#00FF; // avoids need to byte-swap]]>
</Line>
<Line Number="269">
<![CDATA[					end_if;]]>
</Line>
<Line Number="270">
<![CDATA[					]]>
</Line>
<Line Number="271">
<![CDATA[					DINT2 := Ref_List[WriteIndex].Diag.Request.LEN;]]>
</Line>
<Line Number="272">
<![CDATA[					COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[DINT2], 2);]]>
</Line>
<Line Number="273">
<![CDATA[					Ref_List[WriteIndex].Diag.Request.LEN := Ref_List[WriteIndex].Diag.Request.LEN + 2;]]>
</Line>
<Line Number="274">
<![CDATA[				end_if;]]>
</Line>
<Line Number="275">
<![CDATA[				]]>
</Line>
<Line Number="276">
<![CDATA[				// Write Single Register]]>
</Line>
<Line Number="277">
<![CDATA[				if (Ref_List[WriteIndex].Type = 6) then]]>
</Line>
<Line Number="278">
<![CDATA[					DINT := Ref_List[WriteIndex].LocalAddress; // tINT -> tDINT]]>
</Line>
<Line Number="279">
<![CDATA[					SWPB(Ref_Data.HoldingRegisters[DINT], REVERSE, INT); // tINT -> tDINT]]>
</Line>
<Line Number="280">
<![CDATA[					DINT2 := Ref_List[WriteIndex].Diag.Request.LEN;]]>
</Line>
<Line Number="281">
<![CDATA[					COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[DINT2], 2);]]>
</Line>
<Line Number="282">
<![CDATA[					Ref_List[WriteIndex].Diag.Request.LEN := Ref_List[WriteIndex].Diag.Request.LEN + 2;]]>
</Line>
<Line Number="283">
<![CDATA[				end_if;]]>
</Line>
<Line Number="284">
<![CDATA[				]]>
</Line>
<Line Number="285">
<![CDATA[				// Write Multiple Coils]]>
</Line>
<Line Number="286">
<![CDATA[				if (Ref_List[WriteIndex].Type = 15) then]]>
</Line>
<Line Number="287">
<![CDATA[					DINT := Ref_List[WriteIndex].Count / 8; // tINT -> tDINT]]>
</Line>
<Line Number="288">
<![CDATA[					]]>
</Line>
<Line Number="289">
<![CDATA[					if (DINT * 8 <> Ref_List[WriteIndex].Count) then]]>
</Line>
<Line Number="290">
<![CDATA[						DINT := DINT + 1; // tINT -> tDINT]]>
</Line>
<Line Number="291">
<![CDATA[					end_if;]]>
</Line>
<Line Number="292">
<![CDATA[					]]>
</Line>
<Line Number="293">
<![CDATA[					DINT2 := Ref_List[WriteIndex].Diag.Request.LEN;]]>
</Line>
<Line Number="294">
<![CDATA[					COP(DINT, Ref_List[WriteIndex].Diag.Request.DATA[DINT2], 1); // tINT -> tDINT]]>
</Line>
<Line Number="295">
<![CDATA[					Ref_List[WriteIndex].Diag.Request.LEN := Ref_List[WriteIndex].Diag.Request.LEN + 1;]]>
</Line>
<Line Number="296">
<![CDATA[					Bit := 0;]]>
</Line>
<Line Number="297">
<![CDATA[					Byte := 0;]]>
</Line>
<Line Number="298">
<![CDATA[					Str462.LEN := DINT; // tINT -> tDINT]]>
</Line>
<Line Number="299">
<![CDATA[					Str462.DATA[0] := 0;]]>
</Line>
<Line Number="300">
<![CDATA[					LastAddr := Ref_List[WriteIndex].Count - 1 + Ref_List[WriteIndex].LocalAddress;]]>
</Line>
<Line Number="301">
<![CDATA[					i := Ref_List[WriteIndex].LocalAddress;]]>
</Line>
<Line Number="302">
<![CDATA[					]]>
</Line>
<Line Number="303">
<![CDATA[					while (i < LastAddr) do]]>
</Line>
<Line Number="304">
<![CDATA[						Str462.DATA[Byte].[Bit] := Ref_Data.Coils[i];]]>
</Line>
<Line Number="305">
<![CDATA[						Bit := Bit + 1;]]>
</Line>
<Line Number="306">
<![CDATA[						]]>
</Line>
<Line Number="307">
<![CDATA[						if (Bit > 7) then]]>
</Line>
<Line Number="308">
<![CDATA[							Bit := 0;]]>
</Line>
<Line Number="309">
<![CDATA[							Byte := Byte + 1;]]>
</Line>
<Line Number="310">
<![CDATA[							Str462.DATA[Byte] := 0;]]>
</Line>
<Line Number="311">
<![CDATA[						end_if;]]>
</Line>
<Line Number="312">
<![CDATA[						]]>
</Line>
<Line Number="313">
<![CDATA[						i := i + 1;]]>
</Line>
<Line Number="314">
<![CDATA[					end_while;]]>
</Line>
<Line Number="315">
<![CDATA[					]]>
</Line>
<Line Number="316">
<![CDATA[					CONCAT(Ref_List[WriteIndex].Diag.Request, Str462, Ref_List[WriteIndex].Diag.Request);]]>
</Line>
<Line Number="317">
<![CDATA[				end_if;]]>
</Line>
<Line Number="318">
<![CDATA[				]]>
</Line>
<Line Number="319">
<![CDATA[				// Write Multiple Registers]]>
</Line>
<Line Number="320">
<![CDATA[				if (Ref_List[WriteIndex].Type = 16) then]]>
</Line>
<Line Number="321">
<![CDATA[					DINT := Ref_List[WriteIndex].Count * 2; // tINT -> tDINT]]>
</Line>
<Line Number="322">
<![CDATA[					DINT2 := Ref_List[WriteIndex].Diag.Request.LEN;]]>
</Line>
<Line Number="323">
<![CDATA[					COP(DINT, Ref_List[WriteIndex].Diag.Request.DATA[DINT2], 1); // tINT -> tDINT]]>
</Line>
<Line Number="324">
<![CDATA[					Ref_List[WriteIndex].Diag.Request.LEN := Ref_List[WriteIndex].Diag.Request.LEN + 1;]]>
</Line>
<Line Number="325">
<![CDATA[					LastAddr := Ref_List[WriteIndex].Count - 1 + Ref_List[WriteIndex].LocalAddress;]]>
</Line>
<Line Number="326">
<![CDATA[					i := Ref_List[WriteIndex].LocalAddress;]]>
</Line>
<Line Number="327">
<![CDATA[					]]>
</Line>
<Line Number="328">
<![CDATA[					while (i < LastAddr) do]]>
</Line>
<Line Number="329">
<![CDATA[						SWPB(Ref_Data.HoldingRegisters[i], REVERSE, INT);]]>
</Line>
<Line Number="330">
<![CDATA[						DINT2 := Ref_List[WriteIndex].Diag.Request.LEN;]]>
</Line>
<Line Number="331">
<![CDATA[						COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[DINT2], 2);]]>
</Line>
<Line Number="332">
<![CDATA[						Ref_List[WriteIndex].Diag.Request.LEN := Ref_List[WriteIndex].Diag.Request.LEN + 2;]]>
</Line>
<Line Number="333">
<![CDATA[						i := i + 1;]]>
</Line>
<Line Number="334">
<![CDATA[					end_while;]]>
</Line>
<Line Number="335">
<![CDATA[				end_if;]]>
</Line>
<Line Number="336">
<![CDATA[			else]]>
</Line>
<Line Number="337">
<![CDATA[				Ref_List[WriteIndex].Diag.ErrorCode := -13;]]>
</Line>
<Line Number="338">
<![CDATA[				Ref_List[WriteIndex].Status := -1;]]>
</Line>
<Line Number="339">
<![CDATA[				Ref_List[WriteIndex].Enable := 0;]]>
</Line>
<Line Number="340">
<![CDATA[				BRSError := 1;]]>
</Line>
<Line Number="341">
<![CDATA[			end_if;]]>
</Line>
<Line Number="342">
<![CDATA[		else]]>
</Line>
<Line Number="343">
<![CDATA[			Ref_List[WriteIndex].Diag.ErrorCode := -12;]]>
</Line>
<Line Number="344">
<![CDATA[			Ref_List[WriteIndex].Status := -1;]]>
</Line>
<Line Number="345">
<![CDATA[			Ref_List[WriteIndex].Enable := 0;]]>
</Line>
<Line Number="346">
<![CDATA[			BRSError := 1;]]>
</Line>
<Line Number="347">
<![CDATA[		end_if;]]>
</Line>
<Line Number="348">
<![CDATA[		]]>
</Line>
<Line Number="349">
<![CDATA[		if (NOT BRSError) then]]>
</Line>
<Line Number="350">
<![CDATA[			Ref_List[WriteIndex].Diag.RequestBuilt := 1;]]>
</Line>
<Line Number="351">
<![CDATA[			Step := 420;]]>
</Line>
<Line Number="352">
<![CDATA[		else]]>
</Line>
<Line Number="353">
<![CDATA[			Step := 480;]]>
</Line>
<Line Number="354">
<![CDATA[		end_if;]]>
</Line>
<Line Number="355">
<![CDATA[	else]]>
</Line>
<Line Number="356">
<![CDATA[		Step := 480;]]>
</Line>
<Line Number="357">
<![CDATA[	end_if;]]>
</Line>
<Line Number="358">
<![CDATA[end_if;]]>
</Line>
<Line Number="359">
<![CDATA[]]>
</Line>
<Line Number="360">
<![CDATA[if (Step = 420) then]]>
</Line>
<Line Number="361">
<![CDATA[	if (Ref_List[WriteIndex].Diag.RequestBuilt & Ref_List[WriteIndex].Diag.Trigger) then]]>
</Line>
<Line Number="362">
<![CDATA[		IDCount := (IDCount + 1) & 16#0000_7FFF; // clamp to [0...32767]]]>
</Line>
<Line Number="363">
<![CDATA[		Ref_List[WriteIndex].Diag.ID := IDCount;]]>
</Line>
<Line Number="364">
<![CDATA[		SWPB(Ref_List[WriteIndex].Diag.ID, REVERSE, INT);]]>
</Line>
<Line Number="365">
<![CDATA[		COP(INT, Ref_List[WriteIndex].Diag.Request.DATA[0], 2);]]>
</Line>
<Line Number="366">
<![CDATA[		Ref_List[WriteIndex].Diag.WriteNow := 1;]]>
</Line>
<Line Number="367">
<![CDATA[		Ref_List[WriteIndex].Diag.Trigger := 0;]]>
</Line>
<Line Number="368">
<![CDATA[		Step := 440;]]>
</Line>
<Line Number="369">
<![CDATA[		]]>
</Line>
<Line Number="370">
<![CDATA[		if (Ref_List[WriteIndex].Complete) then]]>
</Line>
<Line Number="371">
<![CDATA[			Ref_List[WriteIndex].Diag.NoReplyCount := 0;]]>
</Line>
<Line Number="372">
<![CDATA[		end_if;]]>
</Line>
<Line Number="373">
<![CDATA[	end_if;]]>
</Line>
<Line Number="374">
<![CDATA[end_if;]]>
</Line>
<Line Number="375">
<![CDATA[]]>
</Line>
<Line Number="376">
<![CDATA[/*]]>
</Line>
<Line Number="377">
<![CDATA[	Prepare to send the transaction.]]>
</Line>
<Line Number="378">
<![CDATA[*/]]>
</Line>
<Line Number="379">
<![CDATA[if (Step = 440) then]]>
</Line>
<Line Number="380">
<![CDATA[	if (Ref_List[WriteIndex].Diag.WriteNow) then]]>
</Line>
<Line Number="381">
<![CDATA[		DINT := 20;]]>
</Line>
<Line Number="382">
<![CDATA[		COP(DINT, Ref_Connection.MsgSrc[0], 4);]]>
</Line>
<Line Number="383">
<![CDATA[		DINT := 0;]]>
</Line>
<Line Number="384">
<![CDATA[		COP(DINT, Ref_Connection.MsgSrc[4], 8);]]>
</Line>
<Line Number="385">
<![CDATA[		COP(Ref_List[WriteIndex].Diag.Request.LEN, Ref_Connection.MsgSrc[12], 4);]]>
</Line>
<Line Number="386">
<![CDATA[		COP(Ref_List[WriteIndex].Diag.Request.DATA[0], Ref_Connection.MsgSrc[16], Ref_List[WriteIndex].Diag.Request.LEN);]]>
</Line>
<Line Number="387">
<![CDATA[		]]>
</Line>
<Line Number="388">
<![CDATA[		Msg4E.REQ_LEN := Ref_List[WriteIndex].Diag.Request.LEN + 16;]]>
</Line>
<Line Number="389">
<![CDATA[		]]>
</Line>
<Line Number="390">
<![CDATA[		if (Ref_List[WriteIndex].Complete) then]]>
</Line>
<Line Number="391">
<![CDATA[			Ref_List[WriteIndex].Status := 1;]]>
</Line>
<Line Number="392">
<![CDATA[		else]]>
</Line>
<Line Number="393">
<![CDATA[			Ref_List[WriteIndex].Status := 2;]]>
</Line>
<Line Number="394">
<![CDATA[			Ref_List[WriteIndex].Diag.NoReplyCount := Ref_List[WriteIndex].Diag.NoReplyCount + 1;]]>
</Line>
<Line Number="395">
<![CDATA[		end_if;]]>
</Line>
<Line Number="396">
<![CDATA[		]]>
</Line>
<Line Number="397">
<![CDATA[		Ref_List[WriteIndex].Complete := 0;]]>
</Line>
<Line Number="398">
<![CDATA[		Ref_List[WriteIndex].Diag.WriteNow := 0;]]>
</Line>
<Line Number="399">
<![CDATA[		Step := 445;]]>
</Line>
<Line Number="400">
<![CDATA[	end_if;]]>
</Line>
<Line Number="401">
<![CDATA[end_if;]]>
</Line>
<Line Number="402">
<![CDATA[]]>
</Line>
<Line Number="403">
<![CDATA[if (Step = 445 & (Msg4E.DN OR Msg4E.ER OR NOT Msg4E.EN)) then // SocketWrite]]>
</Line>
<Line Number="404">
<![CDATA[	LxMsg(LxMsg, Msg4E, 16#342, SockInst, 0, Msg4E.REQ_LEN, 3000000, 0);]]>
</Line>
<Line Number="405">
<![CDATA[	MSG(Msg4E);]]>
</Line>
<Line Number="406">
<![CDATA[	Step := 450;]]>
</Line>
<Line Number="407">
<![CDATA[end_if;]]>
</Line>
<Line Number="408">
<![CDATA[]]>
</Line>
<Line Number="409">
<![CDATA[if (Step = 450 & (Msg4E.DN OR Msg4E.ER OR NOT Msg4E.EN)) then]]>
</Line>
<Line Number="410">
<![CDATA[	]]>
</Line>
<Line Number="411">
<![CDATA[	if (Msg4E.DN) then]]>
</Line>
<Line Number="412">
<![CDATA[		Step := 480;]]>
</Line>
<Line Number="413">
<![CDATA[	end_if;]]>
</Line>
<Line Number="414">
<![CDATA[	]]>
</Line>
<Line Number="415">
<![CDATA[	if (Msg4E.ER) then]]>
</Line>
<Line Number="416">
<![CDATA[		Fault := 1;]]>
</Line>
<Line Number="417">
<![CDATA[		Result := -2;]]>
</Line>
<Line Number="418">
<![CDATA[		Step := 900;]]>
</Line>
<Line Number="419">
<![CDATA[	end_if;]]>
</Line>
<Line Number="420">
<![CDATA[end_if;]]>
</Line>
<Line Number="421">
<![CDATA[]]>
</Line>
<Line Number="422">
<![CDATA[/*]]>
</Line>
<Line Number="423">
<![CDATA[	Write is done, repeat for all transactions.]]>
</Line>
<Line Number="424">
<![CDATA[*/]]>
</Line>
<Line Number="425">
<![CDATA[if (Step = 480) then]]>
</Line>
<Line Number="426">
<![CDATA[	Step := 500;]]>
</Line>
<Line Number="427">
<![CDATA[	]]>
</Line>
<Line Number="428">
<![CDATA[	if (WriteIndex < ListSize - 1) then]]>
</Line>
<Line Number="429">
<![CDATA[		WriteIndex := WriteIndex + 1;]]>
</Line>
<Line Number="430">
<![CDATA[		Step := 410;]]>
</Line>
<Line Number="431">
<![CDATA[	end_if;]]>
</Line>
<Line Number="432">
<![CDATA[end_if;]]>
</Line>
<Line Number="433">
<![CDATA[]]>
</Line>
<Line Number="434">
<![CDATA[/*]]>
</Line>
<Line Number="435">
<![CDATA[	Read section.]]>
</Line>
<Line Number="436">
<![CDATA[*/]]>
</Line>
<Line Number="437">
<![CDATA[if (Step = 500 & (Msg4D.DN OR Msg4D.ER OR NOT Msg4D.EN)) then // SocketRead]]>
</Line>
<Line Number="438">
<![CDATA[	MsgReadSrc[0] := 0;]]>
</Line>
<Line Number="439">
<![CDATA[	MsgReadSrc[1] := 484;]]>
</Line>
<Line Number="440">
<![CDATA[	COP(MsgReadSrc[0], Ref_Connection.MsgSrc[0], 8);]]>
</Line>
<Line Number="441">
<![CDATA[	LxMsg(LxMsg, Msg4D, 16#342, SockInst, 0, 8, 3000000, 0);]]>
</Line>
<Line Number="442">
<![CDATA[	MSG(Msg4D);]]>
</Line>
<Line Number="443">
<![CDATA[	Step := 510;]]>
</Line>
<Line Number="444">
<![CDATA[end_if;]]>
</Line>
<Line Number="445">
<![CDATA[]]>
</Line>
<Line Number="446">
<![CDATA[if (Step = 510) then]]>
</Line>
<Line Number="447">
<![CDATA[	]]>
</Line>
<Line Number="448">
<![CDATA[	if (Msg4D.DN) then]]>
</Line>
<Line Number="449">
<![CDATA[		COP(Ref_Connection.MsgDest[8], Str462.LEN, 1);]]>
</Line>
<Line Number="450">
<![CDATA[		]]>
</Line>
<Line Number="451">
<![CDATA[		if (Str462.LEN > 0) then]]>
</Line>
<Line Number="452">
<![CDATA[			COP(Ref_Connection.MsgDest[12], Str462.DATA[0], Str462.LEN);]]>
</Line>
<Line Number="453">
<![CDATA[			CONCAT(Buffer, Str462, Buffer);]]>
</Line>
<Line Number="454">
<![CDATA[		end_if;]]>
</Line>
<Line Number="455">
<![CDATA[		Step := 600;]]>
</Line>
<Line Number="456">
<![CDATA[	end_if;]]>
</Line>
<Line Number="457">
<![CDATA[	]]>
</Line>
<Line Number="458">
<![CDATA[	if (Msg4D.ER) then]]>
</Line>
<Line Number="459">
<![CDATA[		Result := -4;]]>
</Line>
<Line Number="460">
<![CDATA[		Fault := 1;]]>
</Line>
<Line Number="461">
<![CDATA[		Step := 900;]]>
</Line>
<Line Number="462">
<![CDATA[	end_if;]]>
</Line>
<Line Number="463">
<![CDATA[end_if;]]>
</Line>
<Line Number="464">
<![CDATA[]]>
</Line>
<Line Number="465">
<![CDATA[/*]]>
</Line>
<Line Number="466">
<![CDATA[	Packet processing. Check first 7 bytes (header). Bytes 4 and 5 contain additional packet length.]]>
</Line>
<Line Number="467">
<![CDATA[	If all bytes are received, the packet will be extracted from the buffer.]]>
</Line>
<Line Number="468">
<![CDATA[*/]]>
</Line>
<Line Number="469">
<![CDATA[if (Step = 600) then]]>
</Line>
<Line Number="470">
<![CDATA[	if (Buffer.LEN >= 7) then]]>
</Line>
<Line Number="471">
<![CDATA[		COP(Buffer.DATA[4], AddlLen, 1);]]>
</Line>
<Line Number="472">
<![CDATA[		SWPB(AddlLen, REVERSE, AddlLen1);]]>
</Line>
<Line Number="473">
<![CDATA[		AddlReadLen := AddlLen1 + 6;]]>
</Line>
<Line Number="474">
<![CDATA[		]]>
</Line>
<Line Number="475">
<![CDATA[		if (Buffer.LEN >= AddlReadLen) then]]>
</Line>
<Line Number="476">
<![CDATA[			MID(Buffer, AddlReadLen, 1, MBPacket);]]>
</Line>
<Line Number="477">
<![CDATA[			DELETE(Buffer, AddlReadLen, 1, Buffer);]]>
</Line>
<Line Number="478">
<![CDATA[			DataReceived := 1;]]>
</Line>
<Line Number="479">
<![CDATA[		end_if;]]>
</Line>
<Line Number="480">
<![CDATA[	end_if;]]>
</Line>
<Line Number="481">
<![CDATA[	Step := 610;]]>
</Line>
<Line Number="482">
<![CDATA[else]]>
</Line>
<Line Number="483">
<![CDATA[	DataReceived := 0;]]>
</Line>
<Line Number="484">
<![CDATA[end_if;]]>
</Line>
<Line Number="485">
<![CDATA[]]>
</Line>
<Line Number="486">
<![CDATA[/*]]>
</Line>
<Line Number="487">
<![CDATA[	Extract ModbusID, ModbusUnit, and data from the packet.]]>
</Line>
<Line Number="488">
<![CDATA[*/]]>
</Line>
<Line Number="489">
<![CDATA[if (Step = 610) then]]>
</Line>
<Line Number="490">
<![CDATA[	]]>
</Line>
<Line Number="491">
<![CDATA[	if (DataReceived) then]]>
</Line>
<Line Number="492">
<![CDATA[		MID(MBPacket, 2, 1, MBID);]]>
</Line>
<Line Number="493">
<![CDATA[		TxnID := (MBID.DATA[0] * 256) OR MBID.DATA[1];]]>
</Line>
<Line Number="494">
<![CDATA[		MID(MBPacket, 1, 7, MBUnit);]]>
</Line>
<Line Number="495">
<![CDATA[		MBBytes := AddlLen1 - 1;]]>
</Line>
<Line Number="496">
<![CDATA[		MID(MBPacket, MBBytes, 8, MBCmdStr);]]>
</Line>
<Line Number="497">
<![CDATA[		CmdFromPacket := MBCmdStr.DATA[0];]]>
</Line>
<Line Number="498">
<![CDATA[		Step := 620;]]>
</Line>
<Line Number="499">
<![CDATA[	else]]>
</Line>
<Line Number="500">
<![CDATA[		Step := 700;]]>
</Line>
<Line Number="501">
<![CDATA[	end_if;]]>
</Line>
<Line Number="502">
<![CDATA[end_if;]]>
</Line>
<Line Number="503">
<![CDATA[]]>
</Line>
<Line Number="504">
<![CDATA[if (Step = 620) then]]>
</Line>
<Line Number="505">
<![CDATA[	TxnFound := 0;]]>
</Line>
<Line Number="506">
<![CDATA[	]]>
</Line>
<Line Number="507">
<![CDATA[	i := 0;]]>
</Line>
<Line Number="508">
<![CDATA[	while (i < ListSize) do]]>
</Line>
<Line Number="509">
<![CDATA[		if (Ref_List[i].Enable & TxnID = Ref_List[i].Diag.ID) then]]>
</Line>
<Line Number="510">
<![CDATA[			if (NOT CmdFromPacket.7) then]]>
</Line>
<Line Number="511">
<![CDATA[				Ref_List[i].Status := 0;]]>
</Line>
<Line Number="512">
<![CDATA[				Ref_List[i].Diag.ErrorCode := 0;]]>
</Line>
<Line Number="513">
<![CDATA[			else]]>
</Line>
<Line Number="514">
<![CDATA[				Ref_List[i].Status := -1;]]>
</Line>
<Line Number="515">
<![CDATA[				Ref_List[i].Diag.ErrorCode := MBBytes;]]>
</Line>
<Line Number="516">
<![CDATA[			end_if;]]>
</Line>
<Line Number="517">
<![CDATA[			]]>
</Line>
<Line Number="518">
<![CDATA[			CWROffset := Ref_List[i].LocalAddress;]]>
</Line>
<Line Number="519">
<![CDATA[			CWRCount := Ref_List[i].Count;]]>
</Line>
<Line Number="520">
<![CDATA[			Ref_List[i].Complete := 1;]]>
</Line>
<Line Number="521">
<![CDATA[			Ref_List[i].Diag.RequestBuilt := 0;]]>
</Line>
<Line Number="522">
<![CDATA[			Ref_List[i].Diag.Overload := 0;]]>
</Line>
<Line Number="523">
<![CDATA[			TxnFound := 1;]]>
</Line>
<Line Number="524">
<![CDATA[		end_if;]]>
</Line>
<Line Number="525">
<![CDATA[		i := i + 1;]]>
</Line>
<Line Number="526">
<![CDATA[	end_while;]]>
</Line>
<Line Number="527">
<![CDATA[	]]>
</Line>
<Line Number="528">
<![CDATA[	/*]]>
</Line>
<Line Number="529">
<![CDATA[		Transaction types 1 and 2 (addresses 0xxxx / 1xxxx).]]>
</Line>
<Line Number="530">
<![CDATA[		Transaction types 3 and 4 (addresses 4xxxx / 3xxxx).]]>
</Line>
<Line Number="531">
<![CDATA[		For writes, just treat the current transaction as received.]]>
</Line>
<Line Number="532">
<![CDATA[	*/	]]>
</Line>
<Line Number="533">
<![CDATA[	if (CmdFromPacket = 1 OR CmdFromPacket = 2) then]]>
</Line>
<Line Number="534">
<![CDATA[		MBCmdLen := MBCmdStr.DATA[1];]]>
</Line>
<Line Number="535">
<![CDATA[		]]>
</Line>
<Line Number="536">
<![CDATA[		if (TxnFound & (CWRCount <= MBCmdLen * 8)) then]]>
</Line>
<Line Number="537">
<![CDATA[			if (1 <= CWRCount & CWRCount <= 256) then]]>
</Line>
<Line Number="538">
<![CDATA[				ByteIndex := 2;]]>
</Line>
<Line Number="539">
<![CDATA[				BitIndex := 0;]]>
</Line>
<Line Number="540">
<![CDATA[				CmdLast := CWRCount - 1 + CWROffset;]]>
</Line>
<Line Number="541">
<![CDATA[				i := CWROffset;]]>
</Line>
<Line Number="542">
<![CDATA[				]]>
</Line>
<Line Number="543">
<![CDATA[				if (CmdLast < 1024) then]]>
</Line>
<Line Number="544">
<![CDATA[					while (i <= CmdLast) do]]>
</Line>
<Line Number="545">
<![CDATA[						if (CmdFromPacket = 1) then]]>
</Line>
<Line Number="546">
<![CDATA[							Ref_Data.Coils[i] := MBCmdStr.DATA[ByteIndex].[BitIndex];]]>
</Line>
<Line Number="547">
<![CDATA[						else]]>
</Line>
<Line Number="548">
<![CDATA[							Ref_Data.DiscreteInputs[i] := MBCmdStr.DATA[ByteIndex].[BitIndex];]]>
</Line>
<Line Number="549">
<![CDATA[						end_if;]]>
</Line>
<Line Number="550">
<![CDATA[						]]>
</Line>
<Line Number="551">
<![CDATA[						BitIndex := BitIndex + 1;]]>
</Line>
<Line Number="552">
<![CDATA[						]]>
</Line>
<Line Number="553">
<![CDATA[						if (BitIndex > 7) then]]>
</Line>
<Line Number="554">
<![CDATA[							BitIndex := 0;]]>
</Line>
<Line Number="555">
<![CDATA[							ByteIndex := ByteIndex + 1;]]>
</Line>
<Line Number="556">
<![CDATA[						end_if;]]>
</Line>
<Line Number="557">
<![CDATA[						]]>
</Line>
<Line Number="558">
<![CDATA[						i := i + 1;]]>
</Line>
<Line Number="559">
<![CDATA[					end_while;]]>
</Line>
<Line Number="560">
<![CDATA[				end_if;]]>
</Line>
<Line Number="561">
<![CDATA[			end_if;]]>
</Line>
<Line Number="562">
<![CDATA[		end_if;]]>
</Line>
<Line Number="563">
<![CDATA[	elsif (CmdFromPacket = 3 OR CmdFromPacket = 4) then]]>
</Line>
<Line Number="564">
<![CDATA[		MBCmdLen := (MBCmdStr.DATA[1] & 16#FF) / 2;]]>
</Line>
<Line Number="565">
<![CDATA[		]]>
</Line>
<Line Number="566">
<![CDATA[		if (TxnFound & CWRCount <= MBCmdLen) then]]>
</Line>
<Line Number="567">
<![CDATA[			if (1 <= CWRCount & CWRCount <= 120) then]]>
</Line>
<Line Number="568">
<![CDATA[				StrPos := 2;]]>
</Line>
<Line Number="569">
<![CDATA[				CmdLast := CWRCount - 1 + CWROffset;]]>
</Line>
<Line Number="570">
<![CDATA[				i := CWROffset;]]>
</Line>
<Line Number="571">
<![CDATA[				]]>
</Line>
<Line Number="572">
<![CDATA[				while (i <= CmdLast) do]]>
</Line>
<Line Number="573">
<![CDATA[					COP(MBCmdStr.DATA[StrPos], INT, 1);]]>
</Line>
<Line Number="574">
<![CDATA[					]]>
</Line>
<Line Number="575">
<![CDATA[					if (CmdFromPacket = 3) then]]>
</Line>
<Line Number="576">
<![CDATA[						SWPB(INT, REVERSE, Ref_Data.HoldingRegisters[i]);]]>
</Line>
<Line Number="577">
<![CDATA[					else]]>
</Line>
<Line Number="578">
<![CDATA[						SWPB(INT, REVERSE, Ref_Data.InputRegisters[i]);]]>
</Line>
<Line Number="579">
<![CDATA[					end_if;]]>
</Line>
<Line Number="580">
<![CDATA[					]]>
</Line>
<Line Number="581">
<![CDATA[					StrPos := StrPos + 2;]]>
</Line>
<Line Number="582">
<![CDATA[					i := i + 1;]]>
</Line>
<Line Number="583">
<![CDATA[				end_while;]]>
</Line>
<Line Number="584">
<![CDATA[			end_if;]]>
</Line>
<Line Number="585">
<![CDATA[		end_if;]]>
</Line>
<Line Number="586">
<![CDATA[	end_if;]]>
</Line>
<Line Number="587">
<![CDATA[	Step := 700;]]>
</Line>
<Line Number="588">
<![CDATA[end_if;]]>
</Line>
<Line Number="589">
<![CDATA[]]>
</Line>
<Line Number="590">
<![CDATA[if (Step = 700) then // packet processing finished or no data received]]>
</Line>
<Line Number="591">
<![CDATA[	StepTimer.Reset := 1;]]>
</Line>
<Line Number="592">
<![CDATA[	Step := 300;]]>
</Line>
<Line Number="593">
<![CDATA[end_if;]]>
</Line>
<Line Number="594">
<![CDATA[]]>
</Line>
<Line Number="595">
<![CDATA[if (Step = 800) then // clear requests]]>
</Line>
<Line Number="596">
<![CDATA[	StepTimer.Reset := 1;]]>
</Line>
<Line Number="597">
<![CDATA[	Connected := 0;]]>
</Line>
<Line Number="598">
<![CDATA[	Fault := 0;]]>
</Line>
<Line Number="599">
<![CDATA[	//Result := -12;]]>
</Line>
<Line Number="600">
<![CDATA[	Result := 0;]]>
</Line>
<Line Number="601">
<![CDATA[	Step := 900;]]>
</Line>
<Line Number="602">
<![CDATA[	]]>
</Line>
<Line Number="603">
<![CDATA[	i := 0;]]>
</Line>
<Line Number="604">
<![CDATA[	while (i < ListSize) do]]>
</Line>
<Line Number="605">
<![CDATA[		Ref_List[i].Diag.RequestBuilt := 0;]]>
</Line>
<Line Number="606">
<![CDATA[		i := i + 1;]]>
</Line>
<Line Number="607">
<![CDATA[	end_while;]]>
</Line>
<Line Number="608">
<![CDATA[end_if;]]>
</Line>
<Line Number="609">
<![CDATA[]]>
</Line>
<Line Number="610">
<![CDATA[if (Step = 900) then]]>
</Line>
<Line Number="611">
<![CDATA[	Connected := 0;]]>
</Line>
<Line Number="612">
<![CDATA[	]]>
</Line>
<Line Number="613">
<![CDATA[	if (SockInst = 0) then]]>
</Line>
<Line Number="614">
<![CDATA[		Step := 0;]]>
</Line>
<Line Number="615">
<![CDATA[	else]]>
</Line>
<Line Number="616">
<![CDATA[		Step := 905;]]>
</Line>
<Line Number="617">
<![CDATA[	end_if;]]>
</Line>
<Line Number="618">
<![CDATA[end_if;]]>
</Line>
<Line Number="619">
<![CDATA[]]>
</Line>
<Line Number="620">
<![CDATA[if (Step = 905 & (Msg4F.DN OR Msg4F.ER OR NOT Msg4F.EN)) then // SocketDelete]]>
</Line>
<Line Number="621">
<![CDATA[	LxMsg(LxMsg, Msg4F, 16#342, SockInst, 0, 0, 1000000, 0);]]>
</Line>
<Line Number="622">
<![CDATA[	MSG(Msg4F);]]>
</Line>
<Line Number="623">
<![CDATA[	SockInst := 0;]]>
</Line>
<Line Number="624">
<![CDATA[	Step := 0;]]>
</Line>
<Line Number="625">
<![CDATA[end_if;]]>
</Line>
<Line Number="626">
<![CDATA[]]>
</Line>
<Line Number="627">
<![CDATA[Overlap := 0;]]>
</Line>
<Line Number="628">
<![CDATA[Overload := 0;]]>
</Line>
<Line Number="629">
<![CDATA[]]>
</Line>
<Line Number="630">
<![CDATA[i := 0;]]>
</Line>
<Line Number="631">
<![CDATA[while (i < ListSize) do // transaction timers and diagnostics]]>
</Line>
<Line Number="632">
<![CDATA[	if (Ref_List[i].Interval >= 50) then]]>
</Line>
<Line Number="633">
<![CDATA[		Ref_List[i].Diag.IntervalTimer.PRE := Ref_List[i].Interval - 40;]]>
</Line>
<Line Number="634">
<![CDATA[	else]]>
</Line>
<Line Number="635">
<![CDATA[		Ref_List[i].Interval := 1000;]]>
</Line>
<Line Number="636">
<![CDATA[	end_if;]]>
</Line>
<Line Number="637">
<![CDATA[	]]>
</Line>
<Line Number="638">
<![CDATA[	Ref_List[i].Diag.IntervalTimer.TimerEnable := Ref_List[i].Enable;]]>
</Line>
<Line Number="639">
<![CDATA[	TONR(Ref_List[i].Diag.IntervalTimer);]]>
</Line>
<Line Number="640">
<![CDATA[	]]>
</Line>
<Line Number="641">
<![CDATA[	if (Ref_List[i].Diag.IntervalTimer.Reset) then]]>
</Line>
<Line Number="642">
<![CDATA[		Ref_List[i].Diag.IntervalTimer.Reset := 0;]]>
</Line>
<Line Number="643">
<![CDATA[	end_if;]]>
</Line>
<Line Number="644">
<![CDATA[	]]>
</Line>
<Line Number="645">
<![CDATA[	Ref_List[i].Diag.PendingTimer.PRE := 3000;]]>
</Line>
<Line Number="646">
<![CDATA[	Ref_List[i].Diag.PendingTimer.TimerEnable := Ref_List[i].Diag.RequestBuilt;]]>
</Line>
<Line Number="647">
<![CDATA[	TONR(Ref_List[i].Diag.PendingTimer);]]>
</Line>
<Line Number="648">
<![CDATA[	]]>
</Line>
<Line Number="649">
<![CDATA[	if (Ref_List[i].Diag.PendingTimer.Reset) then]]>
</Line>
<Line Number="650">
<![CDATA[		Ref_List[i].Diag.PendingTimer.Reset := 0;]]>
</Line>
<Line Number="651">
<![CDATA[	end_if;]]>
</Line>
<Line Number="652">
<![CDATA[	]]>
</Line>
<Line Number="653">
<![CDATA[	if (Ref_List[i].Diag.PendingTimer.DN) then]]>
</Line>
<Line Number="654">
<![CDATA[		Ref_List[i].Diag.RequestBuilt := 0;]]>
</Line>
<Line Number="655">
<![CDATA[		Ref_List[i].Diag.Overload := 1;]]>
</Line>
<Line Number="656">
<![CDATA[	end_if;]]>
</Line>
<Line Number="657">
<![CDATA[	]]>
</Line>
<Line Number="658">
<![CDATA[	Overlap := Overlap OR Ref_List[i].Diag.Overlap & Enabled;]]>
</Line>
<Line Number="659">
<![CDATA[	Overload := Overload OR Ref_List[i].Diag.Overload & Enabled;]]>
</Line>
<Line Number="660">
<![CDATA[	]]>
</Line>
<Line Number="661">
<![CDATA[	i := i + 1;]]>
</Line>
<Line Number="662">
<![CDATA[end_while;]]>
</Line>
<Line Number="663">
<![CDATA[]]>
</Line>
<Line Number="664">
<![CDATA[StepTimer.PRE := 10000;]]>
</Line>
<Line Number="665">
<![CDATA[StepTimer.TimerEnable := 1;]]>
</Line>
<Line Number="666">
<![CDATA[]]>
</Line>
<Line Number="667">
<![CDATA[if (StepTimer.DN & NOT StepTimer.Reset) then]]>
</Line>
<Line Number="668">
<![CDATA[	StepTimer.Reset := 1;]]>
</Line>
<Line Number="669">
<![CDATA[	Step := 900;]]>
</Line>
<Line Number="670">
<![CDATA[end_if;]]>
</Line>
<Line Number="671">
<![CDATA[]]>
</Line>
<Line Number="672">
<![CDATA[TONR(StepTimer);]]>
</Line>
<Line Number="673">
<![CDATA[]]>
</Line>
<Line Number="674">
<![CDATA[if (StepTimer.Reset) then]]>
</Line>
<Line Number="675">
<![CDATA[	StepTimer.Reset := 0;]]>
</Line>
<Line Number="676">
<![CDATA[end_if;]]>
</Line>
<Line Number="677">
<![CDATA[]]>
</Line>
<Line Number="678">
<![CDATA[Val_Result := Result;]]>
</Line>
<Line Number="679">
<![CDATA[Val_SocketInstance := SockInst;]]>
</Line>
<Line Number="680">
<![CDATA[Sts_Enabled := Enabled;]]>
</Line>
<Line Number="681">
<![CDATA[Sts_Connected := Connected;]]>
</Line>
<Line Number="682">
<![CDATA[Sts_Fault := Fault;]]>
</Line>
<Line Number="683">
<![CDATA[Sts_Overlap := Overlap;]]>
</Line>
<Line Number="684">
<![CDATA[Sts_Overload := Overload;]]>
</Line>
<Line Number="685">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
<Routine Name="Prescan" Type="ST">
<STContent>
<Line Number="0">
<![CDATA[]]>
</Line>
<Line Number="1">
<![CDATA[/*]]>
</Line>
<Line Number="2">
<![CDATA[	MBTCP_Client]]>
</Line>
<Line Number="3">
<![CDATA[	----------------------------------------]]>
</Line>
<Line Number="4">
<![CDATA[*/]]>
</Line>
<Line Number="5">
<![CDATA[]]>
</Line>
<Line Number="6">
<![CDATA[WriteIndex := 0;]]>
</Line>
<Line Number="7">
<![CDATA[Result := 0;]]>
</Line>
<Line Number="8">
<![CDATA[Step := 0;]]>
</Line>
<Line Number="9">
<![CDATA[ClientStatus := 0;]]>
</Line>
<Line Number="10">
<![CDATA[]]>
</Line>
</STContent>
</Routine>
</Routines>
<Dependencies>
<Dependency Type="DataType" Name="STR_4096"/>
<Dependency Type="DataType" Name="MBTCP_ConnectParameters"/>
<Dependency Type="DataType" Name="LxSocketCreateParameters"/>
<Dependency Type="DataType" Name="STR_16"/>
<Dependency Type="AddOnInstructionDefinition" Name="LxIO"/>
<Dependency Type="AddOnInstructionDefinition" Name="LxIOPath"/>
<Dependency Type="AddOnInstructionDefinition" Name="LxMsg"/>
<Dependency Type="DataType" Name="STR_462"/>
<Dependency Type="DataType" Name="STR_8"/>
<Dependency Type="AddOnInstructionDefinition" Name="LpPulse"/>
<Dependency Type="DataType" Name="MBTCP_ClientConnection"/>
<Dependency Type="DataType" Name="MBTCP_ClientData"/>
<Dependency Type="DataType" Name="MBTCP_ClientTransaction"/>
</Dependencies>
</AddOnInstructionDefinition>
</AddOnInstructionDefinitions>
</Controller>
</RSLogix5000Content>
